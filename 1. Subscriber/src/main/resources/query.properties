
#AMS_USER_SYNC_QUERIES
QUERY_FETCH_ALL_USERS = SELECT um.`user_id`,um.`country_code`,um.`department`,um.`designation`,um.`full_name`,um.`email_id`,um.`password`,um.`user_name`, um.`phone`,um.`status`,um.`updated_on`,um.`created_on`,um.`manager_id` FROM user_master um WHERE um.`token_status` = 'VERIFIED'
QUERY_FETCH_UNSYNCED_USERS = SELECT um.`user_id`,um.`country_code`,um.`department`,um.`designation`,um.`full_name`,um.`email_id`,um.`password`,um.`user_name`, um.`phone`,um.`status`,um.`updated_on`,um.`created_on`,um.`manager_id` FROM user_master um CROSS JOIN ams_user_sync aus WHERE (um.updated_on BETWEEN ? AND CURRENT_TIMESTAMP) AND um.`token_status` = 'VERIFIED'
UPDATE_AMS_USER_SYNC_LOG = update ams_user_sync set last_synced_on = ? where client_id = ?
INSERT_AMS_USER_SYNC_LOG = insert into ams_user_sync(client_id,last_synced_on) values(?,?)
QUERY_FETCH_EXISTING_AMS_USER_SYNC_LOG = SELECT * FROM ams_user_sync WHERE client_id = ?
QUERY_FETCH_USER_ROLES = SELECT rm.`role_id`,rm.`role_desc` FROM role_master rm LEFT JOIN user_role_map urm ON urm.`role_id` = rm.`role_id` WHERE urm.`user_id` = ?
QUERY_FETCH_USER_MANAGER = SELECT user_id,full_name,user_name,email_id,phone,country_code FROM user_master WHERE user_id = ?

#AMS_SCHEDULE_SYNC_QUERIES
QUERY_FETCH_EXISTING_AMS_SCHEDULE_SYNC_LOG = SELECT * FROM ams_schedule_sync WHERE client_id = ?
QUERY_FETCH_ALL_SCHEDULES = SELECT sm.`schedule_id`,sm.`start_date_time`,sm.`end_date_time`,sm.`ams_id`,sm.`process_id`,sm.`manager_id`,sm.`created_on`,sm.`updated_on`, pm.`title`,um.`user_name` FROM schedule_master sm LEFT JOIN process_master pm ON pm.`process_id` = sm.`process_id` LEFT JOIN user_master um ON um.`user_id` = sm.`manager_id` WHERE sm.`ams_id` = ?
QUERY_FETCH_UNSYNCED_SCHEDULES = SELECT sm.`schedule_id`,sm.`start_date_time`,sm.`end_date_time`,sm.`ams_id`,sm.`process_id`,sm.`manager_id`,sm.`created_on`,sm.`updated_on`, pm.`title`,um.`user_name` FROM schedule_master sm LEFT JOIN process_master pm ON pm.`process_id` = sm.`process_id` LEFT JOIN user_master um ON um.`user_id` = sm.`manager_id` CROSS JOIN ams_schedule_sync WHERE sm.`ams_id` = ? AND (sm.`updated_on` BETWEEN ? AND CURRENT_TIMESTAMP)
QUERY_FETCH_USER_OPERATORS = SELECT um.`user_id`,um.`user_name` FROM user_master um LEFT JOIN schedule_operator_map som ON som.`operator_id` = um.`user_id` WHERE som.`schedule_id` = ?
UPDATE_AMS_SCHEDULE_SYNC_LOG = update ams_schedule_sync set last_synced_on = ? where client_id = ?
INSERT_AMS_SCHEDULE_SYNC_LOG = insert into ams_schedule_sync(client_id,last_synced_on) values(?,?)

#AMS_PROCESS_SYNC_QUERIES
QUERY_FETCH_EXISTING_AMS_PROCESS_SYNC_LOG = SELECT last_synced_on FROM ams_process_sync WHERE client_id = ?
QUERY_FETCH_ALL_PROCESS = SELECT * FROM process_master
QUERY_FETCH_UNSYNCED_PROCESS = SELECT * FROM process_master WHERE is_modified = 1
INSERT_AMS_PROCESS_SYNC_LOG = insert into ams_process_sync(client_id,last_synced_on,is_synced) values(?,?,1)
UPDATE_AMS_PROCESS_SYNC_LOG = update ams_process_sync set last_synced_on = ?, is_synced = 1 where client_id = ?
UPDATE_OTHER_AMS_PROCESS_SYNC_FLAG = update ams_process_sync set is_synced = 0 where client_id != ?
QUERY_FETCH_EXISTING_PROCESS = SELECT is_modified, updated_on FROM process_master WHERE process_id = ?
UPDATE_PROCESS_MASTER = update process_master set product_name = ?, title = ?, is_active = ?, is_modified = ?, updated_on = ? where process_id = ?
INSERT_PROCESS_MASTER = insert into process_master(process_id,product_name,title,is_active,is_modified,updated_on) values(?,?,?,?,?,?)
QUERY_FETCH_MODIFIED_PROCESS = SELECT * FROM process_master WHERE is_modified = 1 AND process_id NOT IN (?)
QUERY_COUNT_NOT_SYNCED_AMS = SELECT COUNT(*) AS count FROM ams_process_sync WHERE is_synced = 0
QUERY_COUNT_MODIFIED_PROCESS_COUNT = SELECT COUNT(*) AS count FROM process_master WHERE is_modified = 1
UPDATE_MODIFIED_PROCESS_STATUS = update process_master set is_modified = 0